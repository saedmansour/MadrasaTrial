@model IEnumerable<Madrasa.Models.SubjectView>

@{
    ViewBag.Title = "AddNewSubject";
}



@* JAVASCRIPT AND HTML 
*@

<script type="text/javascript">
    var mainDivName = "AddNewSubjectDiv";
    var Model = @Html.Raw(Json.Encode(Model));
</script>

@* Function for adding radio button
*@
<script  type="text/javascript">
    /*
     * add space according to the level and new line if get true in the second parameter
     */
    function newLineAndSace(depth, ToAddNewLine) {
       var str = "";
       if(ToAddNewLine == true){
        str="<br/>";
       }
       //no reason for choose 3
       for (var i = 0; i < depth * 3; i++) {
           str += "&nbsp";
       }
       return str;
    }
    /* 
     * check if 2 list are equals , return true (1)
     */
    function isEqual(arr1, arr2) {
        if (arr1.length != arr2.length) {
            return false;
        }
        for (var i = 0; i < arr1.length; i++) {
            if (arr1[i] != arr2[i]) {
                return false;
            }
        }
        return true;
    }
    /* 
     *  Event when subject radio clicked
     */
    function copyArray(arrSource, arrDestenation) {
        for (var i = 0; i < arrSource.length; i++) {
            arrDestenation.push(arrSource[i]);
        }
    }
    /* 
     *  Event when subject radio clicked
     *      create list of the checked subject and call addExistSubject
     */
    function EventClickedSubject( id) {
        if (id == null) {
            addExistSubject(mainDivName, [], "", null);
            return;
        }
        for (var i = 0; i < Model.length; i++) {
            if (Model[i].id == id) {
                var subjectList = [];
                //create array of the pressed subject
                copyArray(Model[i].ancestorIdList, subjectList);
                subjectList.push(Model[i].id);
                //create the radios
                addExistSubject(mainDivName, subjectList, Model[i].childrenId, Model[i].id);
            }
        }
    }
    /* 
     *  add radio for div with groupName and text beside and  ID of checked Subject
     */
    function addRadio(divPtr, group, text,id, checked) {
        var addChecked = "checked";
        if (checked == false) {
            addChecked = "";
        }
        divPtr.innerHTML += '<input type="radio"  onclick=EventClickedSubject(' + id + ') name="' + group + '"'+addChecked+'/>' + text;
    }
    /* 
     *  add next Level of the subjects
     *  GET the ID that need to mark it as checked.
     */
    function addNextSubjectLevelRadios(divPtr, subjectList, depth, idNeedToCheck) {
        ////add new line and space for new level if its not first stage
        if (depth != 0) {
            divPtr.innerHTML += newLineAndSace(depth, true);
        }
        for (var j = 0; j < Model.length; j++) {
            // print the stage by compare the sufix of IDLIST
            if (isEqual(Model[j].ancestorIdList, subjectList)) {
                var checked = false;
                if (Model[j].id == idNeedToCheck) {
                    checked = true;
                }
                addRadio(divPtr, "group" + depth, Model[j].title, Model[j].id, checked);
            }
        }
    }
    /* 
     *  add radio with empty textBox for the new subject  
     */
    function addNewSubject(div, id, ancestorIdList, group) {
        var divPtr = document.getElementById(div);
        addRadio(divPtr, group, "Add new Subject", id, true);
        divPtr.innerHTML += '<input type="text"  name="title" />';
        divPtr.innerHTML += '<input type="hidden" id="ancestorIdList" name="ancestorIdSplitStr" value="' + ancestorIdList + '" />';
    }
    /* Main Function.
     * add radio for the existing subject
     */
    function addExistSubject(div, idsList, childrenId, id) {
        var divPtr = document.getElementById(div);
        divPtr.innerHTML = "";
        var subjectList = [];
        //add the the next level stage 
        for (var i = 0; i < idsList.length + 1; i++) {
            var subjectIdToCheck = "";
            if (i < idsList.length) {
                subjectIdToCheck = idsList[i];
            }
            //add next level and mark subjectIDToCheck as checked.
            addNextSubjectLevelRadios(divPtr, subjectList, i, subjectIdToCheck);
            //add radio for back
            if (i != idsList.length) {
                var ancestorIdList = (i == 0) ? null : subjectList[subjectList.length - 1];
                addRadio(divPtr, "group" + i, "add here", ancestorIdList, false);
            }
            //create next level list father
            subjectList.push(idsList[i]);
        }
        //check the father List
        //add blank radio for the new subject
        addNewSubject(div, id, childrenId, "group" + idsList.length);
    }
</script>

@*
*@
<h2>AddNewSubject</h2>
<div style="direction: ltr">
@using (Html.BeginForm())
{
    <div id="AddNewSubjectDiv">
        
    </div>
    <input type="submit" value="Insert subject" />
    <div id="InputDiv">
        
    </div>
    <script type="text/javascript">
        addExistSubject(mainDivName, [], "", null);
    </script>
    
}
</div>